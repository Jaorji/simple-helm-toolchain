---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "Develop a Kubernetes app with Helm~otc-ui1030"
template.description: "With this toolchain, you can develop a Docker application and its Helm chart together in source control and have it built and deployed automatically to a Kubernetes cluster. The toolchain performs sanity checks prior to building or deploying and ensures privacy by using a private container registry and namespaces for the container registry and the Kubernetes cluster. This toolchain is also leveraging [Vulnerability Advisor](https://www.ibm.com/blogs/bluemix/2016/06/docker-container-security-with-vulnerability-advisor/), to ensure only secure images get deployed.\n\nBy default, the toolchain uses a sample Node.js \"Hello World\" app, but you can link to your own Git repository instead as long as it has a Dockerfile and a Helm chart.\n\n You can manage your IBM Cloud Container clusters in the [console](https://console.ng.bluemix.net/docs/containers/cs_cluster.html#cs_cluster).\n\n This toolchain uses tools that are part of the Continuous Delivery service. If an instance of that service isn't already in your organization, when you click **Create**, it is automatically added at no cost to you. For more information and terms, see the [IBM Cloud catalog](/catalog/services/continuous-delivery/).\n\nTo get started, click **Create**.\n\nFor step-by-step instructions, follow the [tutorial](https://www.ibm.com/cloud/garage/tutorials/tc-simple-kube-helm).~otc-ui1031"
template.gettingStarted: " **Your toolchain is ready!**\n**Quick start:** Commit a change to the Git repo to trigger a new Docker image build, which will be scanned for vulnerabilites and deployed with Helm to your Kubernetes cluster. For step-by-step instructions, see the [tutorial](https://www.ibm.com/cloud/garage/tutorials/tc-simple-kube-helm?task=2) for this toolchain.~otc-ui1032"
deploy.title: "Hello World Deploy Stage~otc-ui1033"
deploy.description: "hello-world simple toolchain~otc-ui1034"
deploy.longDescription: "The Delivery Pipeline automates continuous build, test and deploy of the Docker application.~otc-ui1035"
deploy.appDescription: "The name of your app~otc-ui1036"
deploy.appName: "App name~otc-ui1037"
deploy.apikeyDescription: "The IBM Cloud API key is used to access the IBM Container Service API and interact with the cluster. You can obtain your API key with 'bx iam api-key-create' or via the console at https://console.ng.bluemix.net/iam/#/apikeys by clicking **Create API key** (Each API key only can be viewed once).~otc-ui1038"
deploy.registryRegionDescription: "The IBM Cloud region for image registry~otc-ui1039"
deploy.registrynsDescription: "The namespace in the container image registry. You can set it up with {bx cr namespace-add]. Learn more at https://console.bluemix.net/docs/services/Registry/index.html.~otc-ui1040"
deploy.regionDescription: "The IBM Cloud region for prod deployment~otc-ui1041"
deploy.clusterNameDescription: "The name of prod cluster. Retrieve it with [bx cs clusters] or via the console at https://console.ng.bluemix.net/containers-kubernetes/home/clusters.~otc-ui1042"
deploy.namespaceDescription: "Prod namespace~otc-ui1043"
deploy.apikey: "IBM Cloud API Key~otc-ui1044"
deploy.containerregRegion: "Container registry region~otc-ui1045"
deploy.containerregns: "Container registry namespace~otc-ui1046"
deploy.containerregRegion: "Container image registry region~otc-ui1047"
deploy.imgregNs: "Container image registry namespace~otc-ui1048"
deploy.cluster: "Cluster name~otc-ui1049"
deploy.clusterNs: "Cluster namespace~otc-ui1050"
deploy.clusterDescription: "Retrieve the Kubernetes cluster name with the CLI command 'bx cs clusters' or via the [console](https://console.bluemix.net/containers-kubernetes/home/clusters).~otc-ui1051"
deploy.clusternsDescription: "If the cluster namespace doesn't exist already, it will be automatically created and configured.~otc-ui1052"
region: "Cluster region~otc-ui1053"
organization: "Organization~otc-ui1054"
space: "Space~otc-ui1055"
prodStage: "Production environment~otc-ui1056"
headerSVG.think: "THINK~otc-ui1057"
headerSVG.code: "CODE~otc-ui1058"
headerSVG.deliver: "DELIVER~otc-ui1059"
headerSVG.run: "RUN~otc-ui1060"
headerSVG.issueTracker: "ISSUE TRACKER~otc-ui1061"
headerSVG.gitlab1: "GitLab~otc-ui1062"
headerSVG.repository: "REPOSITORY~otc-ui1063"
headerSVG.gitlab2: "GitLab~otc-ui1064"
headerSVG.pipeline: "PIPELINE~otc-ui1065"
headerSVG.webIde: "WEB IDE~otc-ui1066"
headerSVG.ibmCloud: "IBM Cloud~otc-ui1067"
headerSVG.k8withHelm: "Kubernetes with Helm~otc-ui1068"
