---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${GIT_REPO}    
  triggers:
  - type: commit
  properties:
  - name: CHART_NAME
    value: ${CHART_NAME}
    type: text  
  jobs:
  - name: Pre-build check
    type: builder
    build_type: cr
    artifact_dir: output
    target:
      region_id: ${REGISTRY_REGION_ID}
      api_key: ${API_KEY}
    namespace: ${REGISTRY_NAMESPACE}
    image_name: ${CF_APP_NAME}
    script: |-
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/check_prebuild.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi
  - name: Build Docker image
    type: builder
    build_type: cr
    artifact_dir: output
    target:
      region_id: ${REGISTRY_REGION_ID}
      api_key: ${API_KEY}
    namespace: ${REGISTRY_NAMESPACE}
    image_name: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/build_image.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi
- name: VALIDATE
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  triggers:
  - type: stage
  properties:
  - name: buildprops
    value: build.properties
    type: file
  jobs:
  - name: Vulnerability Advisor
    type: tester
    test_type: vulnerabilityadvisor
    use_image_from_build_input: true
    fail_stage: false
    target:
      region_id: ${REGISTRY_REGION_ID}
      api_key: ${API_KEY}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/check_vulnerabilities.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi
- name: STAGING
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  triggers:
  - type: stage
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: CLUSTER_NAMESPACE
    value: ${STAGING_CLUSTER_NAMESPACE}
    type: text
  - name: CHART_NAME
    value: ${CHART_NAME}
    type: text      
  jobs:
  - name: Configure cluster
    type: deployer
    target:
      region_id: ${STAGING_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${STAGING_CLUSTER_NAME}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/config_cluster.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi  
  - name: Deploy Helm chart
    type: deployer
    target:
      region_id: ${STAGING_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${STAGING_CLUSTER_NAME}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/deploy_helm.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi
- name: PROD
  inputs:
  - type: job
    stage: BUILD
    job: Build Docker image
  triggers:
  - type: stage
  properties:
  - name: buildprops
    value: build.properties
    type: file
  - name: CLUSTER_NAMESPACE
    value: ${PROD_CLUSTER_NAMESPACE}
    type: text
  - name: CHART_NAME
    value: ${CHART_NAME}
    type: text        
  jobs:
  - name: Configure cluster
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${PROD_CLUSTER_NAME}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/config_cluster.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi   
  - name: Deploy Helm chart
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      api_key: ${API_KEY}
      kubernetes_cluster: ${PROD_CLUSTER_NAME}
    script: |
      #!/bin/bash
      # use script from app source control, or default to template script
      # use source command to run script to ensure env variables are set in current shell
      SCRIPT_FILE="scripts/deploy_helm.sh"
      SCRIPT_URL="https://raw.githubusercontent.com/open-toolchain/simple-helm-toolchain/master/${SCRIPT_FILE}"
      if [ ! -f  ${SCRIPT_FILE} ]; then
        echo -e "No script found at ./${SCRIPT_FILE}, defaulting to ${SCRIPT_URL}"
        source <(curl -sSL ${SCRIPT_URL})
      else
        source "${SCRIPT_FILE}"
      fi